// let gpps = [111, 199, 92, 187, 71, 196, 65, 218, 74, 240, 95, 246, 111, 232, 156, 217, 163, 193, 188, 187, 204, 201, 210, 224, 196, 243, 166, 241, 250, 242, 250, 212, 254, 186, 271, 211, 286, 233, 296, 244, 295, 217, 296, 190, 374, 220, 392, 221, 392, 234, 371, 246, 343, 230, 346, 200, 370, 187, 391, 196, 437, 241, 437, 212, 436, 187, 456, 188, 473, 188, 481, 203, 465, 216, 481, 242, 519, 244, 528, 223, 564, 226, 548, 226, 572, 245, 547, 189, 537, 203, 555, 204, 628, 243, 630, 220, 629, 189, 605, 185, 653, 186, 731, 200, 712, 186, 693, 205, 713, 214, 732, 231, 716, 246, 689, 233, 220, 396, 218, 366, 223, 338, 241, 368, 262, 392, 262, 363, 262, 337, 309, 397, 310, 365, 309, 338, 332, 365, 351, 363, 353, 336, 355, 394, 394, 394, 416, 339, 401, 375, 438, 373, 446, 394, 431, 352, 409, 352, 420, 373, 484, 392, 484, 367, 486, 339, 505, 365, 525, 390, 526, 364, 528, 336, 578, 337, 578, 364, 576, 395, 575, 351];
let gpps = [111, 202, 102, 189, 87, 189, 72, 194, 67, 205, 65, 220, 70, 232, 76, 242, 87, 247, 97, 247, 106, 240, 113, 230, 183, 188, 171, 190, 159, 200, 155, 214, 158, 226, 164, 237, 173, 245, 186, 246, 198, 240, 207, 229, 207, 216, 205, 203, 196, 192, 251, 245, 251, 232, 251, 218, 251, 205, 251, 192, 263, 198, 269, 209, 276, 219, 282, 230, 291, 241, 296, 227, 294, 215, 294, 203, 293, 188, 389, 199, 381, 190, 370, 189, 357, 190, 346, 200, 342, 210, 342, 218, 346, 232, 355, 244, 369, 246, 384, 245, 393, 235, 391, 222, 375, 221, 438, 244, 437, 233, 437, 221, 436, 208, 435, 196, 441, 185, 451, 187, 464, 187, 479, 190, 482, 204, 470, 213, 458, 216, 448, 216, 470, 224, 477, 232, 482, 243, 519, 247, 526, 232, 532, 220, 537, 206, 543, 192, 546, 185, 552, 196, 557, 209, 561, 220, 565, 231, 571, 244, 537, 227, 547, 226, 556, 226, 629, 244, 629, 231, 629, 219, 627, 207, 629, 194, 606, 188, 616, 188, 627, 186, 635, 186, 645, 188, 654, 189, 731, 198, 722, 189, 712, 189, 700, 189, 693, 198, 696, 209, 707, 213, 716, 216, 728, 220, 733, 231, 726, 241, 714, 245, 701, 243, 692, 232, 220, 394, 220, 382, 220, 368, 218, 353, 221, 337, 229, 345, 234, 356, 241, 366, 249, 376, 257, 389, 264, 398, 263, 381, 261, 364, 262, 351, 262, 337, 311, 394, 311, 381, 309, 368, 310, 354, 310, 339, 320, 363, 329, 363, 338, 363, 351, 364, 351, 353, 350, 341, 353, 373, 352, 386, 352, 396, 391, 395, 398, 382, 404, 368, 407, 358, 413, 348, 418, 338, 426, 347, 430, 358, 432, 369, 437, 377, 440, 386, 444, 395, 408, 376, 417, 375, 426, 376, 484, 394, 483, 381, 483, 369, 484, 358, 485, 345, 493, 343, 498, 352, 483, 335, 504, 360, 509, 369, 515, 379, 523, 388, 529, 394, 528, 378, 527, 365, 527, 354, 527, 339, 527, 334, 578, 394, 576, 371, 577, 360, 577, 349, 575, 337];
let balls = [];
let gps = [];
function setup() {
  createCanvas(800, 600);
  textAlign(CENTER, CENTER);
  textSize(90);
  for(let i = 0; i < 175; i++){
   balls.push(new Ball(i)); 
  }
  for(let i = 0; i < gpps.length; i+=2){
    gps.push(new Gdot(gpps[i], gpps[i+1]));
  }
  print(gps.length);
}

function draw() {
  noStroke();
  background(0,120,250);
  // drawWords();

  for(let ball of balls){
    ball.draw();
    ball.appForce();
    ball.move();
    // for(let gp of gps){
    //  ball.calculateForce(gp); 
    // }
    // ball.move();
  }
  // for(let gp of gps){
  //   gp.show(); 
  // }
  // for(let i = 0; i < gpps.length; i+=2){
  //   fill(0,255,0);
  //   ellipse(gpps[i], gpps[i+1], 15);
  // }
}

function drawWords(){
  fill(255);
  text('C O N G R A T S', width/2, height/2 - height/8);
  text('N H A N !', width/2, height/2 + height/8);

}

function mouseClicked(){
  gpps.push(mouseX,mouseY); 
}

function keyTyped(){
  if (key == 'p'){
   console.log(gpps); 
  }
}